function [y1] = myNeuralNetworkFunctiont1(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 17-Mar-2019 16:22:33.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 3xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0;0.02];
x1_step1.gain = [2;2;2.06185567010309];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.9713052593311068961;-2.9594889144536606906;-0.73711242206352900475;0.54101044920619967282;-0.95381799191203386901;-0.5722061195982005577;-1.6037808163841429376;1.4967535568364438436;-2.6868506419176103606;-5.8764383093027365845];
IW1_1 = [-0.82615109225441496488 -6.230927202898934425 -0.0083963230802741369713;1.5616194367777953556 -4.5192109717119146595 -0.010273744038909156731;1.1517914865713596573 0.64359760027413170924 0.00070488252174873914768;-0.93925909046483624376 -0.83613704188910831228 0.00073260960226522950107;1.4564355504705102096 0.49018172898548550975 0.0029821379375375607623;2.8988448212858659581 -3.2533069247233474819 -0.011803657081670176215;-3.7783922401556266912 1.1354121115582294088 0.0074507715904040599728;3.3958740957545239247 -1.1412589146533267392 -0.0049221077458624371351;-1.967559374722742449 -1.7162405418266937218 -2.1429748071648280217;-4.7330942299569516152 0.60012306062999209999 0.011290821913898366202];

% Layer 2
b2 = 2.120171873910692284;
LW2_1 = [0.2094383040029987042 -0.20938217598491723481 11.688528290686713618 6.8159758002163464141 -4.8962449008468507117 -0.21993953581179057077 -2.6195904213421501439 -3.2288835278101428727 0.0023482829547763193513 2.3615700927595559833];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end

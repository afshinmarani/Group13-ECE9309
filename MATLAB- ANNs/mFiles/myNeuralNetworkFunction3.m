function [y1] = myNeuralNetworkFunction3(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 16-Mar-2019 18:34:06.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 2xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0];
x1_step1.gain = [2;2];
x1_step1.ymin = -1;

% Layer 1
b1 = [9.1809596848487249332;-7.1027953747879344348;-6.7423314122169495377;2.9356811256793040599;3.0136527903649916738;0.30545136164908776033;-0.39278458646749281336;0.2175291909536497259;1.1030121052576149498;-3.7379231581781873217;-0.068631739408778494327;-0.98622500112995536981;-2.3407490562528505684;3.048858758121211654;-1.9369179162935390437;-0.82053778479893857423;-1.66738119088440917;-0.7312698923346423463;1.7318657828399310894;-0.33690040349445488088;3.8486178034304239226;1.0132072967830578758;-6.8628159336646765709;-5.2637190727316101047;6.7637535837982669662;-6.6842717781315377223;-8.1388328740730138122;-35.114320269719641487;12.242068899021358419;10.716799516170103956];
IW1_1 = [-5.5207102542411750079 -0.69870860131943945959;1.5894230695674134157 -5.7673949244631685929;2.1667847144065697229 -4.9536084557507704673;-4.9018277577952202861 -4.764105854713345245;-6.6254251093064455702 1.8342929328081198914;-1.3941748966794795805 -1.8965715875462039186;1.7467728535085187414 2.0060835395350777866;3.5273286961464829226 1.624867162459479708;3.3493303685060755726 1.0375364316553712385;0.24119240815654655052 -4.2050145559718421495;-2.0370443155638899846 -0.23860466739191646401;1.4018123524086831821 -1.9513122155479867281;-4.5361949624840791628 -1.0503884433687649125;0.038707469082238092628 3.2837222075357193063;-3.0237291756841706558 -0.12054780739278229962;1.0013031220204056115 -1.850143803376850915;-2.3289286638061375001 0.4492452647839768054;0.66903293470286595568 -2.0265539017629223828;1.9558501046572847049 -0.83200429606508086167;-0.16783384874292348043 1.7602288916135935271;5.7223492071410522186 0.99185209464514012545;1.762563153898217827 0.62615561262733387959;-7.5339812567424164769 -0.092204625119659960886;-3.4143114573971371506 3.3428311271823054618;8.5961962091863881597 1.0432962082729424491;-5.8047021890444518988 1.258758223610242144;-7.5362052642828381011 -1.5373804131491097813;-6.650632626809361625 -27.35295909896035127;4.046990653662750681 -7.5810341601950392842;10.28318084821940559 -0.60637530903349901035];

% Layer 2
b2 = -8.9911994743959802179;
LW2_1 = [-7.7060495285505323793 -1.637619518547425157 1.1224816534010919611 0.021711294727857505943 0.01192924146162687403 -1.8660889208175319709 -1.465312404433425586 -0.37772597302718130541 -2.7053755271789614589 -1.6406823879915850561 1.6124588720522654572 2.3807176559589611209 2.4173102661472780639 -2.8909797756154360648 -4.7319222627363837219 -6.6459130197612434898 7.9761314130031362168 3.757035863650926899 5.8793595271044640782 -0.80362088014186561225 -2.0472750012254024021 10.594251022984117583 1.830226510032906706 -0.1313850804079873813 -0.57430113352501022117 -3.9731432044582208896 -1.4518403484345463461 -8.9637376217499458164 3.1486200796286261117 -2.9581273169507928955];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
